{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/seo.js"],"names":["Index","props","_this","_React$Component","call","this","state","render","data","contentfulHome","console","log","react_default","a","createElement","layout","seo","title","keywords","Content","className","gatsby_image_default","fluid","mainImage","alt","titleBlock","dangerouslySetInnerHTML","__html","mainContentBlock","childContentfulRichText","html","React","Component","query","SEO","_ref","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired"],"mappings":"mPAWMA,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MACKC,MAAQ,GAFIJ,8BAInBK,OAAA,WAEE,IAAMC,EAAOH,KAAKJ,MAAMO,KAAKC,eAE7B,OADAC,QAAQC,IAAIH,GAEVI,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAEEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKC,MAAM,OAAOC,SAAU,mCAC5BN,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAAA,OAAKM,UAAU,kBACbR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,yBACbR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,mBACbR,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAKS,MAAOd,EAAKe,UAAUD,MAAOE,IAAI,OAG1CZ,EAAAC,EAAAC,cAAA,OAAKM,UAAU,0BACbR,EAAAC,EAAAC,cAAA,UACGN,EAAKiB,YAERb,EAAAC,EAAAC,cAAA,OAAKM,UAAU,UAAUM,wBAAyB,CAAEC,OAAQnB,EAAKoB,iBAAiBC,wBAAwBC,gBAxBpGC,IAAMC,WAiCbC,EAAK,aAkBHjC,sHCzDf,SAASkC,EAATC,GAA2D,IAA5CC,EAA4CD,EAA5CC,YAAaC,EAA+BF,EAA/BE,KAAMC,EAAyBH,EAAzBG,KAAMpB,EAAmBiB,EAAnBjB,SAAUD,EAASkB,EAATlB,MAC9C,OACIsB,EAAA1B,EAAAC,cAAC0B,EAAA,YAAD,CACIP,MAAOQ,EACPlC,OAAQ,SAAAC,GACJ,IAAMkC,EACFN,GAAe5B,EAAKmC,KAAKC,aAAaR,YAC1C,OACIG,EAAA1B,EAAAC,cAAC+B,EAAAhC,EAAD,CACIiC,eAAgB,CACZT,QAEJpB,MAAOA,EACP8B,cAAa,QAAUvC,EAAKmC,KAAKC,aAAa3B,MAC9CqB,KAAM,CACF,CACIU,KAAI,cACJC,QAASP,GAEb,CACIQ,SAAQ,WACRD,QAAShC,GAEb,CACIiC,SAAQ,iBACRD,QAASP,GAEb,CACIQ,SAAQ,UACRD,QAAO,WAEX,CACID,KAAI,eACJC,QAAO,WAEX,CACID,KAAI,kBACJC,QAASzC,EAAKmC,KAAKC,aAAaO,QAEpC,CACIH,KAAI,gBACJC,QAAShC,GAEb,CACI+B,KAAI,sBACJC,QAASP,IAGZU,OACGlC,EAASmC,OAAS,EACZ,CACEL,KAAI,WACJC,QAAS/B,EAASoC,KAAT,OAEX,IAETF,OAAOd,MAtD5B9B,KAAA+C,IA8DRrB,EAAIsB,aAAe,CACfnB,KAAI,KACJC,KAAM,GACNpB,SAAU,IAGdgB,EAAIuB,UAAY,CACZrB,YAAasB,IAAUC,OACvBtB,KAAMqB,IAAUC,OAChBrB,KAAMoB,IAAUE,MAChB1C,SAAUwC,IAAUG,QAAQH,IAAUC,QACtC1C,MAAOyC,IAAUC,OAAOG,YAGb5B,MAEf,IAAMO,EAAY","file":"component---src-pages-index-js-94c335066a6f8d08e0ae.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout/layout\"\nimport Image from \"../components/image\"\nimport SEO from \"../components/seo\"\nimport Content from '../components/Content/Content'\nimport \"../components/styles/home.sass\"\nimport Img from \"gatsby-image\"\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {}\n  }\n  render() {\n\n    const data = this.props.data.contentfulHome\n    console.log(data);\n    return (\n      <Layout>\n\n        <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n        <Content>\n          <div className=\"home col__swap\">\n            <div className=\"home__left snap__full\">\n              <div className=\"home__left__img\">\n                <Img fluid={data.mainImage.fluid} alt=\"\" />\n              </div>\n            </div>\n            <div className=\"home__right snap__full\">\n              <h2>\n                {data.titleBlock}\n              </h2>\n              <div className=\"sethtml\" dangerouslySetInnerHTML={{ __html: data.mainContentBlock.childContentfulRichText.html }}></div>\n            </div>\n          </div>\n        </Content>\n      </Layout>);\n  }\n}\n\n\nexport const query = graphql`\n  query {\n    contentfulHome{\n      titleBlock\n      mainContentBlock{\n        childContentfulRichText{\n          html\n        }\n      }\n      mainImage{\n        \n      fluid(maxWidth: 400) {\n            ...GatsbyContentfulFluid_noBase64\n          }\n      }\n    }\n  }\n`\nexport default Index;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n    return (\n        <StaticQuery\n            query={detailsQuery}\n            render={data => {\n                const metaDescription =\n                    description || data.site.siteMetadata.description\n                return (\n                    <Helmet\n                        htmlAttributes={{\n                            lang,\n                        }}\n                        title={title}\n                        titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n                        meta={[\n                            {\n                                name: `description`,\n                                content: metaDescription,\n                            },\n                            {\n                                property: `og:title`,\n                                content: title,\n                            },\n                            {\n                                property: `og:description`,\n                                content: metaDescription,\n                            },\n                            {\n                                property: `og:type`,\n                                content: `website`,\n                            },\n                            {\n                                name: `twitter:card`,\n                                content: `summary`,\n                            },\n                            {\n                                name: `twitter:creator`,\n                                content: data.site.siteMetadata.author,\n                            },\n                            {\n                                name: `twitter:title`,\n                                content: title,\n                            },\n                            {\n                                name: `twitter:description`,\n                                content: metaDescription,\n                            },\n                        ]\n                            .concat(\n                                keywords.length > 0\n                                    ? {\n                                        name: `keywords`,\n                                        content: keywords.join(`, `),\n                                    }\n                                    : []\n                            )\n                            .concat(meta)}\n                    />\n                )\n            }}\n        />\n    )\n}\n\nSEO.defaultProps = {\n    lang: `en`,\n    meta: [],\n    keywords: [],\n}\n\nSEO.propTypes = {\n    description: PropTypes.string,\n    lang: PropTypes.string,\n    meta: PropTypes.array,\n    keywords: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}